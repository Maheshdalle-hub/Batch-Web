import { useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";

const Verify = () => {
  const { token } = useParams();
  const navigate = useNavigate();

  useEffect(() => {
    if (!token) return;

    // ‚úÖ Retrieve the list of used tokens
    let usedTokens = JSON.parse(localStorage.getItem("usedTokens")) || [];

    // ‚úÖ Check for duplicate usage
    if (usedTokens.includes(token)) {
      console.log("‚ùå Token already used! Redirecting to login...");
      navigate("/login");  // üö® Redirect to login if reused
      return;
    }

    // ‚úÖ Add the token to the used list
    usedTokens.push(token);
    localStorage.setItem("usedTokens", JSON.stringify(usedTokens));

    // ‚úÖ Store verification flag and expiration
    const expirationTime = Date.now() + 2 * 24 * 60 * 60 * 1000;  // 2 days expiry
    localStorage.setItem("isLoggedIn", "true");
    localStorage.setItem("isVerified", "true");  // ‚úÖ Add verification flag
    localStorage.setItem("verificationToken", token);
    localStorage.setItem("verificationExpires", expirationTime);

    console.log("‚úÖ Verification successful. Redirecting...");
    navigate("/subjects");  // ‚úÖ Redirect to content
  }, [token, navigate]);

  return <p>‚úÖ Verification successful! Redirecting...</p>;
};

export default Verify;